# Generated by Django 5.2 on 2025-07-10 13:56

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(error_messages={'unique': 'A user with that emaiL already exists.'}, help_text='Required. 150 characters or fewer.', max_length=150, unique=True)),
                ('profile_image', models.ImageField(blank=True, default='profiles/user-default.png', null=True, upload_to='profiles/')),
                ('role', models.CharField(choices=[('ADM', 'Admin'), ('MAN', ' Manager'), ('DOC', 'Doctor'), ('PAT', 'Patient'), ('VOL', 'Volunteer'), ('USE', 'USER')], default='USE', max_length=3)),
                ('varification_code', models.CharField(blank=True, max_length=10, null=True)),
                ('is_email_varification', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('father_name', models.CharField(blank=True, max_length=150, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=150, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('nationality_ID', models.CharField(blank=True, max_length=100, null=True)),
                ('grand_history', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('certificate', models.TextField(blank=True, null=True)),
                ('job', models.CharField(blank=True, max_length=255, null=True)),
                ('previously_affiliated_associations', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('REG', 'Registered'), ('PEN', 'Pending'), ('REJ', 'Rejected'), ('WIT', 'Withdrawn')], default='PEN', max_length=3)),
                ('patient_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_volunteer', to='services.patient')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('content', models.CharField(blank=True, max_length=50000, null=True)),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2025, 7, 10, 13, 56, 49, 915872, tzinfo=datetime.timezone.utc))),
                ('patient_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.patient')),
                ('volunteer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.volunteer')),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawalRequest',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('cause', models.TextField()),
                ('is_approved', models.BooleanField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2025, 7, 10, 13, 56, 49, 916871, tzinfo=datetime.timezone.utc))),
                ('volunteer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_request', to='users.volunteer')),
            ],
        ),
    ]
